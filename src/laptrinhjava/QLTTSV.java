/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package laptrinhjava;

import static java.lang.Thread.sleep;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ComboBoxModel;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import static laptrinhjava.Program.con;



/**
 *
 * @author Admin
 */
public class QLTTSV extends javax.swing.JFrame {
    private static QLTTSV instance; 
    private String stt = "";
    private Object selected = new Object();
    public QLTTSV() {
        initComponents();
    }
    
    public static synchronized QLTTSV getInstance(){
        if(instance==null){
            instance = new QLTTSV();
            instance.setVisible(true);
        } else{
            instance.setVisible(true);
        }
        return instance;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        JPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        ReloadBtn = new javax.swing.JButton();
        SaveBtn = new javax.swing.JButton();
        EditBtn = new javax.swing.JButton();
        DeleteBtn = new javax.swing.JButton();
        InsertBtn = new javax.swing.JButton();
        CloseBtn = new javax.swing.JButton();
        ConnectBtn = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        MSSV = new javax.swing.JTextField();
        Hoten = new javax.swing.JTextField();
        Birth = new javax.swing.JComboBox<>();
        Lop = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setLocation(new java.awt.Point(550, 170));
        setSize(new java.awt.Dimension(0, 0));

        JPanel1.setBackground(new java.awt.Color(255, 255, 255));
        JPanel1.setFont(new java.awt.Font("Futura Bk", 0, 18)); // NOI18N
        JPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setBackground(new java.awt.Color(255, 255, 204));
        jLabel1.setFont(new java.awt.Font("Futura Bk", 1, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("QUẢN LÝ THÔNG TIN SINH VIÊN");
        jLabel1.setToolTipText("");
        jLabel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));
        jLabel1.setOpaque(true);
        JPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 20, 340, 40));

        ReloadBtn.setBackground(new java.awt.Color(204, 204, 204));
        ReloadBtn.setFont(new java.awt.Font("Futura Hv", 0, 18)); // NOI18N
        ReloadBtn.setText("Reload");
        ReloadBtn.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        ReloadBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ReloadBtnActionPerformed(evt);
            }
        });
        JPanel1.add(ReloadBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 420, 100, 40));

        SaveBtn.setBackground(new java.awt.Color(204, 204, 204));
        SaveBtn.setFont(new java.awt.Font("Futura Hv", 0, 18)); // NOI18N
        SaveBtn.setText("Save");
        SaveBtn.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        SaveBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SaveBtnActionPerformed(evt);
            }
        });
        JPanel1.add(SaveBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 420, 100, 40));

        EditBtn.setBackground(new java.awt.Color(204, 204, 204));
        EditBtn.setFont(new java.awt.Font("Futura Hv", 0, 18)); // NOI18N
        EditBtn.setText("Edit");
        EditBtn.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        EditBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EditBtnActionPerformed(evt);
            }
        });
        JPanel1.add(EditBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 420, 100, 40));

        DeleteBtn.setBackground(new java.awt.Color(204, 204, 204));
        DeleteBtn.setFont(new java.awt.Font("Futura Hv", 0, 18)); // NOI18N
        DeleteBtn.setText("Delete");
        DeleteBtn.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        DeleteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteBtnActionPerformed(evt);
            }
        });
        JPanel1.add(DeleteBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 420, 100, 40));

        InsertBtn.setBackground(new java.awt.Color(204, 204, 204));
        InsertBtn.setFont(new java.awt.Font("Futura Hv", 0, 18)); // NOI18N
        InsertBtn.setText("Insert");
        InsertBtn.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        InsertBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                InsertBtnActionPerformed(evt);
            }
        });
        JPanel1.add(InsertBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 420, 100, 40));

        CloseBtn.setBackground(new java.awt.Color(204, 204, 204));
        CloseBtn.setFont(new java.awt.Font("Futura Hv", 0, 18)); // NOI18N
        CloseBtn.setText("Close");
        CloseBtn.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        CloseBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CloseBtnActionPerformed(evt);
            }
        });
        JPanel1.add(CloseBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 470, 100, 40));

        ConnectBtn.setBackground(new java.awt.Color(204, 204, 204));
        ConnectBtn.setFont(new java.awt.Font("Futura Hv", 0, 18)); // NOI18N
        ConnectBtn.setText("Connect");
        ConnectBtn.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        ConnectBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ConnectBtnActionPerformed(evt);
            }
        });
        JPanel1.add(ConnectBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 470, 100, 40));

        jTable1.setBackground(new java.awt.Color(255, 255, 204));
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "MSSV", "Họ tên", "Năm sinh", "Lớp"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setRowHeight(27);
        jTable1.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jTable1.getColumnModel().getColumn(0).setPreferredWidth(10);
        jTable1.getColumnModel().getColumn(1).setPreferredWidth(150);
        jTable1.getColumnModel().getColumn(2).setPreferredWidth(10);
        jTable1.getColumnModel().getColumn(3).setPreferredWidth(190);
        jScrollPane2.setViewportView(jTable1);

        JPanel1.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 170, 600, 240));

        MSSV.setFont(new java.awt.Font("Futura Bk", 0, 19));
        MSSV.setText("MSSV");
        MSSV.setEnabled(false);
        MSSV.setMargin(new java.awt.Insets(2, 7, 3, 7));
        MSSV.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                MSSVMouseClicked(evt);
            }
        });
        JPanel1.add(MSSV, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 80, 220, 30));

        Hoten.setFont(new java.awt.Font("Futura Bk", 0, 19));
        Hoten.setText("Họ tên");
        Hoten.setEnabled(false);
        Hoten.setMargin(new java.awt.Insets(2, 7, 3, 7));
        Hoten.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                HotenMouseClicked(evt);
            }
        });
        JPanel1.add(Hoten, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 120, 220, 30));

        Birth.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1920", "1921", "1922", "1923", "1924", "1925", "1926", "1927", "1928", "1929", "1930", "1931", "1932", "1933", "1934", "1935", "1936", "1937", "1938", "1939", "1940", "1941", "1942", "1943", "1944", "1945", "1946", "1947", "1948", "1949", "1950", "1951", "1952", "1953", "1954", "1955", "1956", "1957", "1958", "1959", "1960", "1961", "1962", "1963", "1964", "1965", "1966", "1967", "1968", "1969", "1970", "1971", "1972", "1973", "1974", "1975", "1976", "1977", "1978", "1979", "1980", "1981", "1982", "1983", "1984", "1985", "1986", "1987", "1988", "1989", "1990", "1991", "1992", "1993", "1994", "1995", "1996", "1997", "1998", "1999", "2000", "2001", "2002", "2003", "2004", "2005", "2006", "2007", "2008", "2009", "2010", "2011", "2012", "2013", "2014", "2015", "2016", "2017", "2018", "2019", "2020", "2021", "2022", "2023" }));
        Birth.setSelectedIndex(80);
        Birth.setToolTipText("Năm Sinh");
        Birth.setEnabled(false);
        JPanel1.add(Birth, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 80, 130, -1));

        Lop.setSelectedItem("-Mã lớp-");
        Lop.setToolTipText("");
        Lop.setEnabled(false);
        JPanel1.add(Lop, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 120, 130, -1));

        jLabel2.setFont(new java.awt.Font("Futura Bk", 0, 18)); // NOI18N
        jLabel2.setText("Họ tên");
        JPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 120, -1, 30));

        jLabel3.setFont(new java.awt.Font("Futura Bk", 0, 18)); // NOI18N
        jLabel3.setText("Mã lớp");
        JPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 120, -1, 30));

        jLabel4.setFont(new java.awt.Font("Futura Bk", 0, 18)); // NOI18N
        jLabel4.setText("MSSV");
        JPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 80, -1, 30));

        jLabel5.setFont(new java.awt.Font("Futura Bk", 0, 18)); // NOI18N
        jLabel5.setText("Năm sinh");
        JPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 80, -1, 30));

        jMenu1.setText("Danh Mục");

        jMenuItem3.setText("Danh Mục Lớp Học");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem3);

        jMenuItem4.setText("Danh Mục Môn Học");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem4);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Kết Quả");

        jMenuItem1.setText("Nhập Kết Quả Học Tập");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem1);

        jMenuItem2.setText("Bảng Điểm Theo Sinh Viên");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem2);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(JPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 769, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(JPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 540, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ConnectBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ConnectBtnActionPerformed
        if(con != null){
            JOptionPane.showMessageDialog(this, "Đã kết nối!", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
            return;
        }
        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            String dbUrl = "jdbc:sqlserver://DUYANH\\SQLEXPRESS:1433;databaseName=LTJava;user=sa;password=123";
            con = DriverManager.getConnection(dbUrl);
            
            
            Statement s = con.createStatement();
            ResultSet rs = s.executeQuery("select MSSV, HoTen, NamSinh, TenLop from SinhVien inner join Lop on SinhVien.MaLop = Lop.MaLop;");
            // select MSSV, HoTen, NamSinh, Lop from SinhVien inner join Lop on SinhVien.MaLop = Lop.MaLop;
            
            String S ="";
            DefaultTableModel m = (DefaultTableModel) jTable1.getModel();
            m.setRowCount(0);
            while(rs.next()){
                S += "MSSV: " + rs.getString("MSSV")
                    +", Họ tên: " + rs.getString("HoTen")
                    +", Năm sinh: " + rs.getInt(3)
                    +", Lớp: " + rs.getString(4)
                    + "\n";
                
                Object[] obj = {rs.getString("MSSV"), rs.getString("HoTen"), rs.getInt(3), rs.getString(4)};
                m.addRow(obj);
            }
            //con.close();
            s.close();
            System.out.println(S);
            reloadMaLopCBBox();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_ConnectBtnActionPerformed

    private void InsertBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_InsertBtnActionPerformed
        if(con == null){
            JOptionPane.showMessageDialog(this, "Vui lòng kết nối trước!", "Chưa kết nối", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        MSSV.setEnabled(true); MSSV.setText("MSSV");
        Hoten.setEnabled(true); Hoten.setText("Họ tên");
        Birth.setEnabled(true); Birth.setSelectedIndex(80);
        Lop.setEnabled(true);  Lop.setSelectedItem("-Mã lớp-");
        stt = "INSERT";
    }//GEN-LAST:event_InsertBtnActionPerformed

    private void DeleteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteBtnActionPerformed
        if(con == null){
            JOptionPane.showMessageDialog(this, "Vui lòng kết nối trước!", "Chưa kết nối", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        try {
            Statement s = con.createStatement();
            int r = jTable1.getSelectedRow();
            Object mssv = jTable1.getModel().getValueAt(r, 0);

            boolean x = s.execute("delete SinhVien where MSSV= N'" + mssv + "'");
            System.out.println(x ? "Xoa that bai" : "Xoa thanh cong");
            if (x == false) {
                JOptionPane.showMessageDialog(this, "Xóa thành công!", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
                System.out.println("Da xoa: " + mssv);
            }
            s.close();
            ReloadBtn.doClick();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_DeleteBtnActionPerformed

    private void EditBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EditBtnActionPerformed
        int r = jTable1.getSelectedRow();
        
        if(con == null){
            JOptionPane.showMessageDialog(this, "Vui lòng kết nối trước!", "Chưa kết nối", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        if(r == -1){
            JOptionPane.showMessageDialog(this, "Vui lòng chọn hàng cần chỉnh sửa", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
            return;
        }
        
        try {
            Statement s = con.createStatement();
            Object mssv = jTable1.getModel().getValueAt(r, 0);
            Object hoten = jTable1.getModel().getValueAt(r, 1);
            Object ns = jTable1.getModel().getValueAt(r, 2);
            
            ResultSet rs = s.executeQuery("Select MaLop from SinhVien where MSSV = N'"+mssv.toString()+"';");
            if(!rs.next()){
                JOptionPane.showMessageDialog(this, "Lỗi không chọn được mã lớp", "Lỗi", JOptionPane.ERROR_MESSAGE);
            }
            Object lop = rs.getString("MaLop");
            
            MSSV.setText((String) mssv);
            MSSV.setEnabled(true);
            Hoten.setText((String) hoten);
            Hoten.setEnabled(true);
            Birth.setSelectedItem(ns.toString());
            Birth.setEnabled(true);
            Lop.setSelectedItem(lop);
            Lop.setEnabled(true);
            stt="EDIT";
            selected = mssv;
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_EditBtnActionPerformed

    private void SaveBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SaveBtnActionPerformed
        if(con == null){
            JOptionPane.showMessageDialog(this, "Vui lòng kết nối trước!", "Chưa kết nối", JOptionPane.ERROR_MESSAGE);
            return;
        }
        if (stt.equalsIgnoreCase("INSERT")) {
            try {
                if(MSSV.getText().equals("") || Hoten.getText().equals("")){
                    throw new Exception("Mã số sinh viên hoặc họ tên rỗng");
                }
                Statement s = con.createStatement();
                int r = s.executeUpdate("insert into SinhVien values (N'" + MSSV.getText() + "',N'" + Hoten.getText() + "' ," + Birth.getSelectedItem().toString() + ", N'" + Lop.getSelectedItem().toString() + "')");
                //int r=s.executeUpdate("insert into DVD values("+jTextField1.getText()+",'"+jTextField2.getText()+"')");

                JOptionPane.showMessageDialog(this, "Đã thêm " + r + " sinh viên.", "Thông Báo", JOptionPane.INFORMATION_MESSAGE);
                s.close();
                ReloadBtn.doClick();
                return;
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(this,
                        "Không thêm được sinh viên này, vui lòng kiểm tra lại!", "Lỗi", JOptionPane.ERROR_MESSAGE);
                ex.printStackTrace();
            }
        }
        
        if (stt.equalsIgnoreCase("EDIT")){
            try {
                if(MSSV.getText().equals("") || Hoten.getText().equals("")){
                    throw new Exception("Mã số sinh viên hoặc họ tên rỗng");
                }
                Statement s = con.createStatement();
                int r = s.executeUpdate("Update SinhVien "
                        + "set MSSV = N'" + MSSV.getText() + "', HoTen = N'" + Hoten.getText() + "' , NamSinh = " + Birth.getSelectedItem().toString() + ", MaLop = N'" + Lop.getSelectedItem().toString() + "' where MSSV = N'"+selected.toString()+"'");
                
                if (r > 0) {
                    System.out.println("Cập nhật thành công!");
                    JOptionPane.showMessageDialog(this, "Cập nhật thành công.", "Thông Báo", JOptionPane.INFORMATION_MESSAGE);
                } else {
                    System.out.println("Không có dữ liệu được cập nhật.");
                }
                s.close();
                ReloadBtn.doClick();
                return;
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(this,
                        "Không sửa được, vui lòng kiểm tra lại!", "Lỗi", JOptionPane.ERROR_MESSAGE);
                ex.printStackTrace();
            }
        }
        
        //Set các text field và combo box về default
        MSSV.setEnabled(false);
        MSSV.setText("MSSV");
        Hoten.setEnabled(false);
        Hoten.setText("Họ tên");
        Birth.setEnabled(false);
        Birth.setSelectedIndex(80);
        Lop.setEnabled(false);
        Lop.setSelectedItem("-Mã lớp-");
    }//GEN-LAST:event_SaveBtnActionPerformed

    private void ReloadBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ReloadBtnActionPerformed
        if(con == null){
            JOptionPane.showMessageDialog(this, "Vui lòng kết nối trước!", "Chưa kết nối", JOptionPane.ERROR_MESSAGE);
            return;
        }
        try {
            stt = "";
            MSSV.setEnabled(false); MSSV.setText("MSSV");
            Hoten.setEnabled(false); Hoten.setText("Họ tên");
            Birth.setEnabled(false); Birth.setSelectedIndex(80);
            Lop.setEnabled(false); Lop.setSelectedItem("-Mã lớp-");
            
            Statement s = con.createStatement();
            ResultSet rs = s.executeQuery("select MSSV, HoTen, NamSinh, TenLop from SinhVien inner join Lop on SinhVien.MaLop = Lop.MaLop;");
            
            String S ="";
            DefaultTableModel m = (DefaultTableModel) jTable1.getModel();
            m.setRowCount(0);
            while(rs.next()){
                S += "MSSV: " + rs.getString(1)
                    +", Họ tên: " + rs.getString(2)
                    +", Năm sinh: " + rs.getInt(3)
                    +", Lớp: " + rs.getString(4)
                    + "\n";
                
                Object[] obj = {rs.getString("MSSV"), rs.getString("HoTen"), rs.getInt(3), rs.getString(4)};
                m.addRow(obj);
                
            }
            //con.close();
            s.close();
            System.out.println(S);
            reloadMaLopCBBox();
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_ReloadBtnActionPerformed

    private void MSSVMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MSSVMouseClicked
        if(MSSV.getText().equals("MSSV") && MSSV.isEnabled()){
            MSSV.setText("");
        }
    }//GEN-LAST:event_MSSVMouseClicked

    private void HotenMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_HotenMouseClicked
        if(Hoten.getText().equalsIgnoreCase("Họ tên") && Hoten.isEnabled()){
            Hoten.setText("");
        }
    }//GEN-LAST:event_HotenMouseClicked

    private void reloadMaLopCBBox(){
        try {
            Statement s = con.createStatement();
            ResultSet rs = s.executeQuery("SELECT MaLop from Lop;");
            DefaultComboBoxModel<String> CBmodel = (DefaultComboBoxModel<String>) Lop.getModel();
            
            while(rs.next()){
                CBmodel.addElement(rs.getString(1));
            }
            CBmodel.setSelectedItem("-Mã lớp-");
            s.close();
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }
    
    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
        try {
            DM_MonHoc.getInstance();
            if(con!=null)
                DM_MonHoc.getInstance().reloadMonHoc();
            this.setVisible(false);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jMenuItem4ActionPerformed

    private void CloseBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CloseBtnActionPerformed
        try {
            if(con!=null){
                con.close();
                System.out.println("Đóng kết nối!");
            }
            System.exit(0);
        } catch (SQLException ex) {
            Logger.getLogger(QLTTSV.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_CloseBtnActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        try {
            DM_Lop.getInstance();
            if(con!=null)
                DM_Lop.getInstance().reloadLop();
            this.setVisible(false);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        if(con == null){
            JOptionPane.showMessageDialog(this, "Vui lòng kết nối trước!", "Chưa kết nối", JOptionPane.ERROR_MESSAGE);
            return;
        }
        int r = jTable1.getSelectedRow();
        if (r == -1){
            JOptionPane.showMessageDialog(this, "Vui lòng chọn một sinh viên trước!", "Chọn sinh viên", JOptionPane.ERROR_MESSAGE);
            return;
        }
        Object mssv = jTable1.getModel().getValueAt(r, 0);
        try {
            NhapDiem.getInstance(mssv);
            this.setVisible(false);
        } catch (Exception e) {
            e.printStackTrace();
        }    
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        if(con == null){
            JOptionPane.showMessageDialog(this, "Vui lòng kết nối trước!", "Chưa kết nối", JOptionPane.ERROR_MESSAGE);
            return;
        }
        int r = jTable1.getSelectedRow();
        if (r == -1){
            JOptionPane.showMessageDialog(this, "Vui lòng chọn một sinh viên trước!", "Chọn sinh viên", JOptionPane.ERROR_MESSAGE);
            return;
        }
        Object mssv = jTable1.getModel().getValueAt(r, 0);
        try {
            BangDiemHocKy.getInstance(mssv);
            this.setVisible(false);
        } catch (Exception e) {
            e.printStackTrace();
        } 
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    public void reloadTTSV(){
        this.ReloadBtn.doClick();
    }
    
    /**
     * @param args the command line arguments
     */


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> Birth;
    private javax.swing.JButton CloseBtn;
    private javax.swing.JButton ConnectBtn;
    private javax.swing.JButton DeleteBtn;
    private javax.swing.JButton EditBtn;
    private javax.swing.JTextField Hoten;
    private javax.swing.JButton InsertBtn;
    private javax.swing.JPanel JPanel1;
    private javax.swing.JComboBox<String> Lop;
    private javax.swing.JTextField MSSV;
    private javax.swing.JButton ReloadBtn;
    private javax.swing.JButton SaveBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
